package gen;

<%protocols.each{
if(it.req.isEmpty())return;
%>
import gen.handler.${it.protocolName}Handler;
import gen.request.${it.protocolName}Req;<%}%>


import java.util.HashMap;
import java.util.Map;

public class ProtocolUtils {
    public static class Tuple{
        private final Class reqClass;
        private final Class handlerClass;

        public Tuple(Class reqClass, Class handlerClass) {
            this.reqClass = reqClass;
            this.handlerClass = handlerClass;
        }

        public Class getReqClass() {
            return reqClass;
        }

        public Class getHandlerClass() {
            return handlerClass;
        }
    }

    public static final Map<Integer, Tuple> REQ_MAPPINGS = new HashMap<Integer, Tuple>();

    static {<%protocols.each{
        if(it.req.isEmpty())return;
    %>
        REQ_MAPPINGS.put(${it.id}, new Tuple(${it.protocolName}Req.class,${it.protocolName}Handler.class));<%}%>
    }
}